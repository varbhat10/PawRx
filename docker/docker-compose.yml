version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: medicheck-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: medicheck
      MONGO_INITDB_ROOT_PASSWORD: medicheck123
      MONGO_INITDB_DATABASE: medicheck-pet
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - medicheck-network

  # Backend API
  backend:
    build:
      context: ../server
      dockerfile: ../docker/Dockerfile.backend
    container_name: medicheck-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://medicheck:medicheck123@mongodb:27017/medicheck-pet?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRE: 30d
      ML_SERVICE_URL: http://ml-service:8000
      CORS_ORIGIN: http://localhost:3000
    depends_on:
      - mongodb
    volumes:
      - ../data:/app/data:ro
    networks:
      - medicheck-network

  # ML Service (Python FastAPI)
  ml-service:
    build:
      context: ../ml
      dockerfile: ../docker/Dockerfile.ml
    container_name: medicheck-ml
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      PORT: 8000
      ENVIRONMENT: production
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      CORS_ORIGINS: http://localhost:3000,http://frontend:80
    networks:
      - medicheck-network

  # Frontend (React)
  frontend:
    build:
      context: ../client
      dockerfile: ../docker/Dockerfile.frontend
    container_name: medicheck-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      REACT_APP_API_URL: http://localhost:5000
    depends_on:
      - backend
    networks:
      - medicheck-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: medicheck-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
      - ml-service
    networks:
      - medicheck-network

volumes:
  mongodb_data:
    driver: local

networks:
  medicheck-network:
    driver: bridge 