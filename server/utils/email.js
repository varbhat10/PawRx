const { Resend } = require('resend');

// Initialize Resend only if API key is available
let resend = null;
if (process.env.RESEND_API_KEY) {
  resend = new Resend(process.env.RESEND_API_KEY);
}

const sendAdverseReactionAlert = async (reactionData, petData, userData) => {
  try {
    if (!process.env.RESEND_API_KEY || !resend) {
      console.log('‚ö†Ô∏è No RESEND_API_KEY configured - skipping email notification');
      return { success: false, message: 'Email service not configured' };
    }

    const { data, error } = await resend.emails.send({
      from: 'PawRX Alert <onboarding@resend.dev>',
      to: ['varbhat10@gmail.com'],
      subject: `üö® Adverse Reaction Alert - ${petData.name} (${petData.species})`,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #e0e0e0; border-radius: 8px;">
          <div style="background-color: #fee2e2; color: #991b1b; padding: 16px; border-radius: 8px; margin-bottom: 20px;">
            <h2 style="margin: 0; display: flex; align-items: center;">
              üö® Adverse Reaction Reported
            </h2>
          </div>
          
          <div style="background-color: #f9fafb; padding: 16px; border-radius: 8px; margin-bottom: 20px;">
            <h3 style="margin-top: 0; color: #374151;">Pet Information</h3>
            <p><strong>Name:</strong> ${petData.name}</p>
            <p><strong>Species:</strong> ${petData.species}</p>
            <p><strong>Breed:</strong> ${petData.breed || 'Not specified'}</p>
            <p><strong>Age:</strong> ${petData.age} ${petData.ageUnit}(s)</p>
            <p><strong>Weight:</strong> ${petData.weight} ${petData.weightUnit}</p>
          </div>

          <div style="background-color: #fef3c7; padding: 16px; border-radius: 8px; margin-bottom: 20px;">
            <h3 style="margin-top: 0; color: #92400e;">Reaction Details</h3>
            <p><strong>Medication:</strong> ${reactionData.medication}</p>
            <p><strong>Date:</strong> ${new Date(reactionData.date).toLocaleDateString()}</p>
            <p><strong>Severity:</strong> <span style="color: ${getSeverityColor(reactionData.severity)}; font-weight: bold; text-transform: uppercase;">${reactionData.severity}</span></p>
            <p><strong>Symptoms:</strong> ${reactionData.symptoms.join(', ')}</p>
            ${reactionData.duration ? `<p><strong>Duration:</strong> ${reactionData.duration}</p>` : ''}
            ${reactionData.treatment ? `<p><strong>Treatment:</strong> ${reactionData.treatment}</p>` : ''}
            <p><strong>Outcome:</strong> ${reactionData.outcome}</p>
            ${reactionData.notes ? `<p><strong>Notes:</strong> ${reactionData.notes}</p>` : ''}
          </div>

          <div style="background-color: #e0f2fe; padding: 16px; border-radius: 8px; margin-bottom: 20px;">
            <h3 style="margin-top: 0; color: #0369a1;">Owner Information</h3>
            <p><strong>Name:</strong> ${userData.name}</p>
            <p><strong>Email:</strong> ${userData.email}</p>
            ${userData.phone ? `<p><strong>Phone:</strong> ${userData.phone}</p>` : ''}
            <p><strong>Reported by:</strong> ${reactionData.reportedBy}</p>
          </div>

          <div style="background-color: #f3f4f6; padding: 16px; border-radius: 8px; border-left: 4px solid #3b82f6;">
            <h3 style="margin-top: 0; color: #1f2937;">Next Steps</h3>
            <ul style="color: #4b5563;">
              <li>Review the reaction details for patterns</li>
              <li>Consider adding this medication to the pet's allergy list</li>
              <li>Monitor for similar reactions in other pets</li>
              <li>Follow up with the owner if needed</li>
            </ul>
          </div>

          <div style="text-align: center; margin-top: 20px; padding-top: 20px; border-top: 1px solid #e0e0e0;">
            <p style="color: #6b7280; font-size: 14px;">
              This alert was generated by PawRX Adverse Reaction Monitoring System<br>
              Generated on ${new Date().toLocaleString()}
            </p>
          </div>
        </div>
      `
    });

    if (error) {
      console.error('‚ùå Email sending failed:', error);
      return { success: false, error };
    }

    console.log('‚úÖ Adverse reaction alert email sent successfully:', data.id);
    return { success: true, id: data.id };

  } catch (error) {
    console.error('‚ùå Email service error:', error);
    return { success: false, error: error.message };
  }
};

// Helper function to get severity color
const getSeverityColor = (severity) => {
  switch (severity) {
    case 'mild': return '#f59e0b';
    case 'moderate': return '#f97316';
    case 'severe': return '#dc2626';
    case 'life-threatening': return '#7f1d1d';
    default: return '#6b7280';
  }
};

const sendCriticalInteractionAlert = async (interactionData, petData, userData) => {
  try {
    if (!process.env.RESEND_API_KEY) {
      console.log('‚ö†Ô∏è No RESEND_API_KEY configured - skipping email notification');
      return;
    }

    const { data, error } = await resend.emails.send({
      from: 'PawRX Alert <onboarding@resend.dev>',
      to: ['varbhat10@gmail.com'],
      subject: `üö® CRITICAL Drug Interaction Alert - ${petData.name} (${petData.species})`,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; border: 2px solid #dc2626; border-radius: 8px;">
          <div style="background-color: #fee2e2; color: #991b1b; padding: 16px; border-radius: 8px; margin-bottom: 20px;">
            <h2 style="margin: 0; display: flex; align-items: center;">
              üö® CRITICAL DRUG INTERACTION DETECTED
            </h2>
          </div>
          
          <div style="background-color: #f9fafb; padding: 16px; border-radius: 8px; margin-bottom: 20px;">
            <h3 style="margin-top: 0; color: #374151;">Pet Information</h3>
            <p><strong>Name:</strong> ${petData.name}</p>
            <p><strong>Species:</strong> ${petData.species}</p>
            <p><strong>Owner:</strong> ${userData.name} (${userData.email})</p>
          </div>

          <div style="background-color: #fecaca; padding: 16px; border-radius: 8px; margin-bottom: 20px; border: 1px solid #dc2626;">
            <h3 style="margin-top: 0; color: #991b1b;">Interaction Details</h3>
            <p><strong>Medications:</strong> ${interactionData.medications.join(' + ')}</p>
            <p><strong>Risk Level:</strong> <span style="color: #dc2626; font-weight: bold;">CRITICAL</span></p>
            <p><strong>Detected at:</strong> ${new Date().toLocaleString()}</p>
          </div>

          <div style="background-color: #fef2f2; padding: 16px; border-radius: 8px; border-left: 4px solid #dc2626;">
            <h3 style="margin-top: 0; color: #991b1b;">IMMEDIATE ACTION REQUIRED</h3>
            <ul style="color: #7f1d1d;">
              <li><strong>Contact the pet owner immediately</strong></li>
              <li><strong>Advise to stop medication combination</strong></li>
              <li><strong>Recommend emergency veterinary consultation</strong></li>
              <li><strong>Monitor for adverse effects</strong></li>
            </ul>
          </div>

          <div style="text-align: center; margin-top: 20px; padding-top: 20px; border-top: 1px solid #e0e0e0;">
            <p style="color: #6b7280; font-size: 14px;">
              This critical alert was generated by PawRX Drug Interaction Monitoring System<br>
              Generated on ${new Date().toLocaleString()}
            </p>
          </div>
        </div>
      `
    });

    if (error) {
      console.error('‚ùå Critical interaction email failed:', error);
      return { success: false, error };
    }

    console.log('‚úÖ Critical interaction alert email sent successfully:', data.id);
    return { success: true, id: data.id };

  } catch (error) {
    console.error('‚ùå Critical interaction email service error:', error);
    return { success: false, error: error.message };
  }
};

const sendPasswordResetEmail = async (userEmail, resetToken, userName) => {
  try {
    if (!resend) {
      console.log('‚ö†Ô∏è No RESEND_API_KEY configured - skipping password reset email');
      return { success: false, message: 'Email service not configured' };
    }

    const resetUrl = `https://varbhat10.github.io/PawRx/reset-password/${resetToken}`;

    const { data, error } = await resend.emails.send({
      from: 'PawRX Security <onboarding@resend.dev>',
      to: [userEmail],
      subject: 'üîí Reset Your PawRX Password',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #e0e0e0; border-radius: 8px;">
          <div style="text-align: center; margin-bottom: 30px;">
            <h1 style="color: #2563eb; margin: 0;">üêæ PawRX</h1>
            <h2 style="color: #374151; margin: 10px 0;">Password Reset Request</h2>
          </div>
          
          <div style="background-color: #f9fafb; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
            <p style="margin: 0 0 15px 0; color: #374151;">Hello ${userName},</p>
            <p style="margin: 0 0 15px 0; color: #374151;">
              You have requested to reset your password for your PawRX account. 
              Click the button below to set a new password:
            </p>
            
            <div style="text-align: center; margin: 30px 0;">
              <a href="${resetUrl}" 
                 style="background-color: #2563eb; color: white; padding: 12px 30px; text-decoration: none; border-radius: 6px; font-weight: bold; display: inline-block;">
                Reset Password
              </a>
            </div>
            
            <p style="margin: 15px 0 0 0; color: #6b7280; font-size: 14px;">
              If the button doesn't work, copy and paste this link into your browser:<br>
              <a href="${resetUrl}" style="color: #2563eb; word-break: break-all;">${resetUrl}</a>
            </p>
          </div>

          <div style="background-color: #fef3c7; padding: 16px; border-radius: 8px; border-left: 4px solid #f59e0b; margin-bottom: 20px;">
            <h3 style="margin-top: 0; color: #92400e;">‚è∞ Important</h3>
            <ul style="color: #92400e; margin: 0; padding-left: 20px;">
              <li>This link will expire in <strong>10 minutes</strong> for security reasons</li>
              <li>If you didn't request this reset, please ignore this email</li>
              <li>Your password won't be changed unless you click the link above</li>
            </ul>
          </div>

          <div style="background-color: #fee2e2; padding: 16px; border-radius: 8px; border-left: 4px solid #dc2626;">
            <h3 style="margin-top: 0; color: #991b1b;">üîí Security Tip</h3>
            <p style="color: #991b1b; margin: 0;">
              Choose a strong password that includes uppercase letters, lowercase letters, numbers, and special characters.
            </p>
          </div>

          <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #e0e0e0;">
            <p style="color: #6b7280; font-size: 14px; margin: 0;">
              If you have any questions, contact our support team.<br>
              This email was sent from PawRX Security System
            </p>
          </div>
        </div>
      `
    });

    if (error) {
      console.error('‚ùå Password reset email failed:', error);
      return { success: false, error };
    }

    console.log('‚úÖ Password reset email sent successfully:', data.id);
    return { success: true, id: data.id };

  } catch (error) {
    console.error('‚ùå Password reset email service error:', error);
    return { success: false, error: error.message };
  }
};

const sendContactSupportEmail = async (supportData) => {
  try {
    if (!resend) {
      console.log('‚ö†Ô∏è No RESEND_API_KEY configured - skipping contact support email');
      return;
    }

    const categoryEmojis = {
      general: 'üí¨',
      technical: '‚öôÔ∏è',
      bug: 'üêõ',
      feature: 'üí°',
      account: 'üë§',
      medication: 'üíä',
      emergency: 'üö®'
    };

    const urgencyFlag = supportData.urgent ? 'üö® URGENT' : '';
    const categoryEmoji = categoryEmojis[supportData.category] || 'üìù';

    // Send notification to me
    const { data, error } = await resend.emails.send({
      from: 'PawRX Support <onboarding@resend.dev>',
      to: ['varbhat10@gmail.com'],
      replyTo: supportData.email, // This makes replies go back to the customer
      subject: `${urgencyFlag} ${categoryEmoji} Contact Form: ${supportData.subject}`,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #e0e0e0; border-radius: 8px;">
          <div style="text-align: center; margin-bottom: 30px;">
            <h1 style="color: #2563eb; margin: 0;">üêæ PawRX Contact Form</h1>
            ${supportData.urgent ? '<div style="background-color: #fee2e2; color: #991b1b; padding: 10px; border-radius: 6px; margin-top: 10px; font-weight: bold;">üö® URGENT REQUEST - Immediate Attention Required</div>' : ''}
          </div>

          <div style="background-color: #f8fafc; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
            <h2 style="color: #1e40af; margin: 0 0 15px 0;">Contact Information</h2>
            <div style="display: grid; gap: 10px;">
              <div><strong>Name:</strong> ${supportData.name}</div>
              <div><strong>Email:</strong> <a href="mailto:${supportData.email}">${supportData.email}</a></div>
              <div><strong>Category:</strong> ${categoryEmoji} ${supportData.category.charAt(0).toUpperCase() + supportData.category.slice(1)}</div>
              <div><strong>Subject:</strong> ${supportData.subject}</div>
              <div><strong>Submitted:</strong> ${new Date(supportData.timestamp).toLocaleString()}</div>
            </div>
          </div>

          <div style="background-color: #ffffff; padding: 20px; border: 1px solid #e5e7eb; border-radius: 8px; margin-bottom: 20px;">
            <h3 style="color: #374151; margin: 0 0 15px 0;">Message</h3>
            <div style="white-space: pre-wrap; line-height: 1.6; color: #4b5563;">${supportData.message}</div>
          </div>

          ${supportData.userInfo ? `
            <div style="background-color: #eff6ff; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
              <h3 style="color: #1e40af; margin: 0 0 15px 0;">üë§ User Account Information</h3>
              <div style="display: grid; gap: 8px; font-size: 14px;">
                <div><strong>User ID:</strong> ${supportData.userInfo.id}</div>
                <div><strong>Account Name:</strong> ${supportData.userInfo.name}</div>
                <div><strong>Account Email:</strong> ${supportData.userInfo.email}</div>
                <div><strong>Account Type:</strong> ${supportData.userInfo.accountType}</div>
                <div><strong>Account Created:</strong> ${new Date(supportData.userInfo.createdAt).toLocaleDateString()}</div>
              </div>
            </div>
          ` : `
            <div style="background-color: #fef3c7; padding: 15px; border-radius: 6px; margin-bottom: 20px; font-size: 14px;">
              <strong>‚ö†Ô∏è Anonymous Submission:</strong> This contact form was submitted by a user who is not logged into their PawRX account.
            </div>
          `}

          <div style="background-color: #f3f4f6; padding: 15px; border-radius: 6px; margin-bottom: 20px; font-size: 12px; color: #6b7280;">
            <h4 style="margin: 0 0 10px 0; color: #374151;">üìã Technical Details</h4>
            <div><strong>IP Address:</strong> ${supportData.submitterIP}</div>
            <div><strong>User Agent:</strong> ${supportData.userAgent}</div>
            <div><strong>Submission ID:</strong> SUP-${Date.now()}</div>
          </div>

          <div style="text-align: center; padding: 20px; background-color: #1e40af; color: white; border-radius: 8px;">
            <h3 style="margin: 0 0 10px 0;">üìß Reply Instructions</h3>
            <p style="margin: 0; font-size: 14px;">
              Reply directly to this email or send your response to: 
              <strong style="background-color: rgba(255,255,255,0.2); padding: 2px 6px; border-radius: 4px;">${supportData.email}</strong>
            </p>
            <p style="margin: 10px 0 0 0; font-size: 12px; opacity: 0.9;">
              Expected response time: ${supportData.urgent ? '4 hours' : '24 hours'}
            </p>
          </div>

          <div style="text-align: center; margin-top: 20px; font-size: 12px; color: #9ca3af;">
            <p>This email was automatically generated by the PawRX contact form.</p>
          </div>
        </div>
      `
    });

    if (error) {
      console.error('‚ùå Contact support email sending failed:', error);
      throw error;
    }

    console.log('‚úÖ Contact support email sent successfully to varbhat10@gmail.com');
    console.log('üìß From:', supportData.name, '(' + supportData.email + ')');
    console.log('üìù Subject:', supportData.subject);
    console.log('üè∑Ô∏è Category:', supportData.category);
    if (supportData.urgent) console.log('üö® URGENT REQUEST');

    // Send confirmation email to the customer (skip for test/example emails)
    if (!supportData.email.includes('example.com') && !supportData.email.includes('test@')) {
      try {
        const confirmationEmail = await resend.emails.send({
          from: 'PawRX Support <onboarding@resend.dev>',
          to: [supportData.email],
        subject: `‚úÖ Support Request Received - ${supportData.subject}`,
        html: `
          <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #e0e0e0; border-radius: 8px;">
            <div style="text-align: center; margin-bottom: 30px;">
              <h1 style="color: #2563eb; margin: 0;">üêæ PawRX Support</h1>
              <div style="background-color: #dcfce7; color: #166534; padding: 10px; border-radius: 6px; margin-top: 10px; font-weight: bold;">
                ‚úÖ Your support request has been received!
              </div>
            </div>

            <div style="background-color: #f8fafc; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
              <h2 style="color: #1e40af; margin: 0 0 15px 0;">Request Details</h2>
              <div style="display: grid; gap: 10px;">
                <div><strong>Subject:</strong> ${supportData.subject}</div>
                <div><strong>Category:</strong> ${categoryEmoji} ${supportData.category.charAt(0).toUpperCase() + supportData.category.slice(1)}</div>
                <div><strong>Priority:</strong> ${supportData.urgent ? 'üö® Urgent' : 'üìã Normal'}</div>
                <div><strong>Submitted:</strong> ${new Date(supportData.timestamp).toLocaleString()}</div>
                <div><strong>Reference ID:</strong> SUP-${Date.now()}</div>
              </div>
            </div>

            <div style="background-color: #ffffff; padding: 20px; border: 1px solid #e5e7eb; border-radius: 8px; margin-bottom: 20px;">
              <h3 style="color: #374151; margin: 0 0 15px 0;">Your Message</h3>
              <div style="white-space: pre-wrap; line-height: 1.6; color: #4b5563; background-color: #f9fafb; padding: 15px; border-radius: 6px;">
${supportData.message}
              </div>
            </div>

            <div style="background-color: #eff6ff; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
              <h3 style="color: #1e40af; margin: 0 0 15px 0;">üìã What Happens Next?</h3>
              <ul style="margin: 0; padding-left: 20px; color: #1e40af;">
                <li><strong>Response Time:</strong> ${supportData.urgent ? 'Within 4 hours' : 'Within 24 hours'}</li>
                <li><strong>Contact Method:</strong> We'll reply directly to this email address</li>
                <li><strong>Updates:</strong> You'll receive email notifications for any updates</li>
                <li><strong>Follow-up:</strong> Feel free to reply to this email with additional information</li>
              </ul>
            </div>

            <div style="background-color: #fef3c7; padding: 15px; border-radius: 6px; margin-bottom: 20px;">
              <h4 style="margin: 0 0 10px 0; color: #92400e;">‚ö†Ô∏è Important Note</h4>
              <p style="margin: 0; font-size: 14px; color: #92400e;">
                PawRX is a demonstration portfolio project. While we strive to respond to all inquiries, 
                for actual veterinary emergencies, please contact your local veterinarian or emergency animal hospital immediately.
              </p>
            </div>

            <div style="text-align: center; padding: 20px; background-color: #1e40af; color: white; border-radius: 8px;">
              <h3 style="margin: 0 0 10px 0;">üìß Need to Add More Information?</h3>
              <p style="margin: 0; font-size: 14px;">
                Simply reply to this email with any additional details, screenshots, or questions.
                Your reply will be directly routed to our support team.
              </p>
            </div>

            <div style="text-align: center; margin-top: 20px; font-size: 12px; color: #9ca3af;">
              <p>Thank you for using PawRX!</p>
              <p>This is an automated confirmation email.</p>
            </div>
          </div>
        `
      });

      if (confirmationEmail.error) {
        console.warn('‚ö†Ô∏è Could not send confirmation email to customer:', confirmationEmail.error);
        } else {
          console.log('‚úÖ Confirmation email sent to customer:', supportData.email);
        }
      } catch (confirmError) {
        console.warn('‚ö†Ô∏è Could not send confirmation email to customer:', confirmError.message);
      }
    } else {
      console.log('‚ö†Ô∏è Skipping confirmation email for test/example email address:', supportData.email);
    }

  } catch (error) {
    console.error('‚ùå Contact support email sending failed:', error);
    throw error;
  }
};

module.exports = {
  sendAdverseReactionAlert,
  sendCriticalInteractionAlert,
  sendContactSupportEmail,
  sendPasswordResetEmail
}; 